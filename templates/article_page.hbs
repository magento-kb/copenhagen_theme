<div class="container-divider"></div>
<div class="container">
  <nav class="sub-nav">
    {{breadcrumbs}}
    <div class="search-container">
      <div id="searchbox">
        <div class="CoveoSearchbox categoryPageSearch" data-enable-omnibox="false">
      </div>
    </div>
  </nav>

  <div class="article-container" id="article-container">
    <aside class="article-sidebar" aria-labelledby="section-articles-title">
      {{#if settings.show_articles_in_section}}
        <div class="collapsible-sidebar">
          <div class="collapsible-sidebar-body">
            <ul class="article-page-sidebar-ul">
              <li>
                <span class="sidenav-title">
                  Articles in this section
                </span>
              </li>
              {{#each section.articles}}
                <li>
                  <a href="{{url}}" class="sidenav-item {{#is id ../article.id}}current-article{{/is}}">{{title}}</a>
                </li>
              {{/each}}
                <li>
                  {{#if section.more_articles}}
                    <a href="{{section.url}}" class="sidenav-item" style="text-align: center;">See all articles ->></a>
                  {{/if}}
                </li>
            </ul>
          </div>
        </div>
      {{/if}}
    </aside>

    <article id="main-content" class="article article-card-container">
      <p class="migration-banner">
        This page <a id="exl-redirect-link" href='' target="_blank">has moved to Adobe Experience League</a> and will be redirected soon.
      </p>
      <header class="article-header">
        <h1 title="{{article.title}}" class="article-title">
          {{article.title}}
          {{#if article.internal}}
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" focusable="false" viewBox="0 0 16 16" class="icon-lock" title="{{t 'internal'}}">
              <rect width="12" height="9" x="2" y="7" fill="currentColor" rx="1" ry="1"/>
              <path fill="none" stroke="currentColor" d="M4.5 7.5V4a3.5 3.5 0 017 0v3.5"/>
            </svg>
          {{/if}}
        </h1>
        <div class="article-author">
          <div class="article-meta">
            <ul class="meta-group">
              {{#is article.created_at article.edited_at}}
                <li class="meta-data">{{t 'created'}}</li>
                <li class="meta-data">{{date article.created_at}}</li>
              {{else}}
                <li class="meta-data">{{t 'updated'}}</li>
                <li class="meta-data">{{date article.edited_at}}</li>
              {{/is}}
            </ul>
          </div>
        </div>
      </header>

      <section class="article-info">
        <div class="article-content">
          <div class="article-body">{{article.body}}</div>
          {{#if attachments}}
            <div class="article-attachments">
              <ul class="attachments">
                {{#each attachments}}
                  <li class="attachment-item">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" focusable="false" viewBox="0 0 16 16" class="attachment-icon">
                      <path fill="none" stroke="currentColor" stroke-linecap="round" d="M9.5 4v7.7c0 .8-.7 1.5-1.5 1.5s-1.5-.7-1.5-1.5V3C6.5 1.6 7.6.5 9 .5s2.5 1.1 2.5 2.5v9c0 1.9-1.6 3.5-3.5 3.5S4.5 13.9 4.5 12V4"/>
                    </svg>
                    <a href="{{url}}" target="_blank">{{name}}</a>
                    <div class="attachment-meta meta-group">
                      <span class="attachment-meta-item meta-data">{{size}}</span>
                      <a href="{{url}}" target="_blank" class="attachment-meta-item meta-data">{{t 'download'}}</a>
                    </div>
                  </li>
                {{/each}}
              </ul>
            </div>
          {{/if}}
        </div>
      </section>

      <footer>
        {{#with article}}
          <div class="article-votes">
            <span class="article-votes-question" id="article-votes-label">{{t 'was_this_article_helpful'}}</span>
            <div class="article-votes-controls" role="group" aria-labelledby="article-votes-label">
              {{vote 'up' role='radio' class='button article-vote article-vote-up' selected_class="button-primary"}}
              {{vote 'down' role='radio' class='button article-vote article-vote-down' selected_class="button-primary"}}
            </div>
            <small class="article-votes-count">
              {{vote 'label' class='article-vote-label'}}
            </small>
          </div>
        {{/with}}

        <div class="article-return-to-top">
          <a href="#article-container">
            {{t 'return_to_top'}}
            <svg xmlns="http://www.w3.org/2000/svg" class="article-return-to-top-icon" width="20" height="20" focusable="false" viewBox="0 0 12 12" aria-hidden="true">
              <path fill="none" stroke="currentColor" stroke-linecap="round" d="M3 4.5l2.6 2.6c.2.2.5.2.7 0L9 4.5"/>
            </svg>
          </a>
        </div>
      </footer>

      <div class="article-relatives">
        {{#if settings.show_recently_viewed_articles}}
          {{recent_articles}}
        {{/if}}
      </div>
    </article>
  </div>
</div>
<script>  

  // TODO: Change links to production links before deploying

  document.addEventListener("DOMContentLoaded", () => {
    if (document.getElementById('gh_filepath')) {
        let gh_filepath = document.getElementById('gh_filepath').title
        addGhLinks(gh_filepath)
        addExlRedirectLink(gh_filepath)
    } else {
        addLogIssueLink()
    }

    function addExlRedirectLink(gh_filepath) {
      
      let filepathArray = gh_filepath.split('/')
      let exlFilePathArray = []
      filepathArray.forEach((item, index) => {
        if (item === 'observation-for-adobe-commerce') {
          exlFilePathArray.push('observation')
        }
        else if (item === 'managed-alerts-for-adobe-commerce') {
          exlFilePathArray.push('managed-alerts')
        }
        else if (item === 'patches-available-in-qpt-tool') {
          exlFilePathArray.push('patches')
        }
        else if (item === 'adobe-commerce-announcements') {
          exlFilePathArray.push('commerce-announcements')
        }
        else if (item === 'help-center-news') {
          exlFilePathArray.push('news')
        }
        // Regex if item contains .md and replace with .html instead
        else if (item.match(/\.md/g)) {
          exlFilePathArray.push(item.replace('.md', '.html'))
        } 
        else if (item != 'help' && item != 'src' && item != 'general') {
          exlFilePathArray.push(item)
        }
      }) 
      let exlFilepath = exlFilePathArray.join('/')
      let exlUrl = `https://experienceleague.corp.adobe.com/docs/commerce-knowledge-base/kb/${exlFilepath}?lang=en`
      document.getElementById('exl-redirect-link').href = exlUrl
    }

    function createDivUl(){
        linksDiv = document.createElement('div')
        unorderedList = document.createElement('ul')
        linksDiv.className = 'gh-links-div'
        unorderedList.className = 'gh-links-div'
    }
  
    function appendLinks(){
        linksDiv.append(unorderedList)
        document.getElementsByClassName('article-author')[0].appendChild(linksDiv)
    }

    function addGhLinks(gh_filepath){
        let gitUrl = 'https://github.com/AdobeDocs/commerce-knowledge-base.en/tree/sandbox/'
        let issueUrl = 'https://github.com/AdobeDocs/commerce-knowledge-base.en/issues'
        issueTitle = `Feedback on page: ${gh_filepath}`
        let editUrl = `${gitUrl}${gh_filepath}`
        createDivUl()
        createListItem(editUrl, 'Edit on GitHub')
        createListItem(issueUrl, 'Report article issues')
        appendLinks()
    }
  
    function addLogIssueLink(){
        let issueUrl = "https:"
        let zdUrl = document.URL
        createDivUl()
        issueTitle = `Feedback on page: ${zdUrl}`
        issueUrl = `${issueUrl}${issueTitle}`
        createListItem(issueUrl, 'Report article issues')
        appendLinks()
    }

    function createListItem(url, label){
        let listItem = document.createElement('li')
        let linkTag = document.createElement('a')
        let img = document.createElement('img')
        if(label == 'Report article issues'){
            img.src = `{{asset 'gh_bug.svg'}}`
        }
        else if(label == 'Edit on GitHub'){
            img.src = `{{asset 'gh_edit.svg'}}`
        }
        img.className = "gh-icons"
        listItem.className = 'gh-link'
        linkTag.title = label; 
        linkTag.textContent = label; 
        linkTag.className = 'gh-links-div'
        linkTag.href = url;
        linkTag.target = '_blank';
        linkTag.prepend(img);
        listItem.append(linkTag);
        unorderedList.appendChild(listItem)
    }
  });
</script>
